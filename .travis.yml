language: generic

#For Ubuntu Trusty (14.04 LTS)
sudo: required
dist: trusty

matrix:
    include:
        - python: "2.7"
          env: GL="gt" PYVERSION="2.7"
        - python: "2.7"
          env: GL="ig" PYVERSION="2.7"
        - python: "2.7"
          env: GL="nx" PYVERSION="2.7"
        - python: "3.5"
          env: GL="gt" PYVERSION="3.x"
        - python: "3.5"
          env: GL="ig" PYVERSION="3.5"
        - python: "3.5"
          env: GL="nx" PYVERSION="3.x"
    fast_finish: true

cache:
    - apt
    - pip

before_install:

    # get repository for clang-3.6 stuff (including clang-format-3.6)
    #~ - sudo sh -c 'echo -n "deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.6 main\n" >> /etc/apt/sources.list'
    #~ - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo sh -c 'echo -n "deb http://llvm-apt.ecranbleu.org/apt/trusty/ llvm-toolchain-trusty main\n" >> /etc/apt/sources.list'
    - wget -O - http://llvm-apt.ecranbleu.org/apt/llvm-snapshot.gpg.key|sudo apt-key add -
    # add ppa for gcc>4.9
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - if [[ "$GL" == "gt" ]]; then sudo sh -c 'echo -n "deb http://downloads.skewed.de/apt/trusty trusty universe\n" >> /etc/apt/sources.list'; fi
    - if [[ "$GL" == "gt" ]]; then sudo sh -c 'echo -n "deb-src http://downloads.skewed.de/apt/trusty trusty universe\n" >> /etc/apt/sources.list'; fi
    - if [[ "$GL" == "gt" ]]; then gpg --keyserver 'http://pgp.skewed.de:11371/pks/lookup?op=get&search=0x612DEFB798507F25' --recv-key 98507f25 && gpg -a --export 98507F25 | sudo apt-key add -; fi
    # update package repository status (-qq is more quiet)
    - sudo rm -rf /var/lib/apt/lists/*
    - ls /etc/apt/sources.list.d/
    - sudo apt-get update -qq
    # remove any obsolete libraries
    - sudo apt-get autoremove

    # requirements for building + installing scipy
    - sudo apt-get install -y build-essential gcc-4.9 autoconf automake libtool libltdl7-dev libreadline6-dev libncurses5-dev libgsl0-dev python-all-dev libblas-dev liblapack-dev libatlas-base-dev gfortran libxml2-dev openmpi
    # Install pip and other libraries
    - wget https://bootstrap.pypa.io/get-pip.py
    - sudo python get-pip.py
    - sudo pip install -U setuptools
    # test scipy from apt (much faster) and install matplotlib
    - if [[ "$PYVERSION" == "2.7" ]]; then sudo apt-get install -y python-scipy python-gtk2-dev && pip install --user cython; fi
    - if [[ "$PYVERSION" == "3.x" ]]; then sudo apt-get install -y python3-scipy python3-pip python3-matplotlib cython3; else sudo pip install matplotlib && pip install --user cython; fi
    # install graph-tool and igraph
    - if [[ "$PYVERSION" == "2.7" && "$GL" == "gt" ]]; then sudo apt-get install -y python-graph-tool; fi
    - if [[ "$PYVERSION" == "3.x" && "$GL" == "gt" ]]; then sudo apt-get install -y python3-graph-tool; fi
    - if [[ "$PYVERSION" == "3.x" && "$GL" == "ig" ]]; then sudo apt-get install python3-cairo libxml2-dev && wget http://igraph.org/nightly/get/c/igraph-0.7.1.tar.gz && tar -zxvf igraph-0.7.1.tar.gz && cd igraph-0.7.1 && ./configure && make -s && sudo make -s install && cd .. && rm -R igraph-0.7.1*; fi
    - if [[ "$PYVERSION" == "2.7" && "$GL" == "ig" ]]; then sudo apt-get install python-igraph; fi

    # testing and coverage analysis
    - shopt -s expand_aliases
    - if [[ "$PYVERSION" == "3.x" ]]; then alias sudo='sudo ' && alias pipv=pip3; else alias sudo='sudo ' && alias pipv=pip; fi
    - sudo pipv install nose2 cov-core coverage coveralls mpi4py

install: sudo pipv install -e ".[$GL]"

script:
    - coverage run -m nose2.__main__ -F
    - export OMP=4 && coverage run -m nose2.__main__ -F

after_success: coveralls

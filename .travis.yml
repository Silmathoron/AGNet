language: python

os: linux
dist: bionic

python: 3.8

# add toolchains for newer, C++14 supporting gcc-8
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-8
    - g++-8

notifications:
  email:
    if: branch = master
    on_success: never
    on_failure: always

services:
- xvfb

env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

jobs:
    include:
        - env: GL="gt"
        - env: GL="ig"
        - env: GL="nx"
        - env: GL="nngt"
        - env: GL="all"
    fast_finish: true

cache:
    - apt
    - pip

before_install:
    - if [[ "$GL" == "gt" || "$GL" == "all" ]]; then
        sudo sh -c 'echo -n "deb http://downloads.skewed.de/apt bionic main\n" >> /etc/apt/sources.list';
        sudo apt-key adv --keyserver keys.openpgp.org --recv-key 612DEFB798507F25;
      fi
    # update package repository status (-qq is more quiet)
    # - sudo add-apt-repository -y ppa:nest-simulator/nest
    - sudo rm -rf /var/lib/apt/lists/*
    - ls /etc/apt/sources.list.d/
    - sudo apt-get update -qq
    # remove any obsolete libraries
    - sudo apt-get autoremove
    # requirements for building + installing scipy and igraph
    - sudo apt-get install -y build-essential autoconf automake libtool python-all-dev libblas-dev liblapack-dev libatlas-base-dev gfortran libxml2-dev openmpi-bin libopenmpi-dev libgmp-dev
    - if [[ "$GL" == "ig" || "$GL" == "all" ]]; then
        sudo apt-get install -y libigraph0v5 libigraph0-dev;
      fi
    # install nest (segfaulting)
    # - apt install -y nest
    # setup pip, libraries, and aliases for graph-tool
    - shopt -s expand_aliases
    - if [[ "$GL" == "gt" || "$GL" == "all" ]]; then
        sudo apt-get install -y python3-pip python3-matplotlib python3-tk;
        alias pip3='sudo -H pip3';
      fi    
    # Pip install dependencies
    - pip3 install --upgrade pip
    - pip3 install --upgrade setuptools
    - pip3 install --upgrade cython
    - pip3 install --upgrade numpy scipy matplotlib shapely numpy mpi4py svg.path dxfgrabber pathlib pytest pytest-mpi cov-core coverage coveralls pycairo
    # install graph-tool, igraph, and networkx
    - if [[ "$GL" == "gt" || "$GL" == "all" ]]; then
        sudo apt-get install -y python3-graph-tool;
      fi
    - if [[ "$GL" == "ig" || "$GL" == "all" ]]; then
        pip3 install python-igraph;
      fi
    - if [[ "$GL" == "nx" || "$GL" == "all" ]]; then pip3 install networkx; fi

install: if [[ "$GL" == "gt" || "$GL" == "all" ]]; then
            sudo -H python3 setup.py install; else
            python setup.py install;
         fi

script:
    - if [[ "$GL" == "all" ]]; then
        coverage run -p -m pytest testing/library_compatibility.py;
      fi
    - if [[ "$GL" != "all" ]]; then
        coverage run -p -m pytest testing;
      fi
    - if [[ "$GL" != "all" ]]; then
        export OMP=4 && coverage run -p -m pytest testing;
      fi
    - if [[ "$GL" != "all" ]]; then
        export OMP=1 && export MPI=1 && mpirun --mca btl ^openib -n 2 coverage run -p -m pytest --with-mpi testing;
      fi
    - coverage combine

after_success: coveralls
